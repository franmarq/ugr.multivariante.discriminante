cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$factor_c),"Dark2")
library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[7]]),pch=1:3,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(MVN)
mvn(data =mtcars1[1:6] , univariateTest = "SW", desc = T)
by(mtcars1[,-7], cil, var)
by(mtcars1[,-7], mtcars1$cil, var)
require(biotools)
boxM(mtcars1[,-7], mtcars1$cil)
mma<-manova(yvars ~ cil, data=mtcars1)
mma
summary(mma, test="Wilks")
summary(mma, test="Roy")
summary(mma, test="Hotelling-Lawley")
summary(mma, test="Pillai")
# mtcars$mpg, mtcars$cyl, mtcars$disp, mtcars$hp, mtcars$drat,mtcars$wt, mtcars$qsec, mtcars$gear, mtcars$vs)
modelo1<-aov(mtcars1$mpg ~ cil )
# mtcars$mpg, mtcars$cyl, mtcars$disp, mtcars$hp, mtcars$drat,mtcars$wt, mtcars$qsec, mtcars$gear, mtcars$vs)
modelo1<-aov(mtcars1$mpg ~ mtcars1$cil )
summary(modelo1)
modelo2<-aov(mtcars1$disp ~ mtcars1$cil )
summary(modelo2)
modelo3<-aov(mtcars1$hp ~ mtcars1$cil )
summary(modelo3)
modelo4<-aov(mtcars1$drat ~ mtcars1$cil )
summary(modelo4)
modelo5<-aov(mtcars1$wt ~ mtcars1$cil )
summary(modelo5)
modelo6<-aov(mtcars1$qsec ~ mtcars1$cil )
summary(modelo6)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[7]]),pch=1:3,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1$cil,pch=1:3,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[7]]),pch=1:3,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, legend=FALSE,oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[7]]),pch=1:3,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
colors
require(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, legend=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[7]]),pch=1:3,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
colors
require(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, legend=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1$cil,pch=1:3,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
require(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, legend=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[7]],pch=1:3,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
require(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, legend=FALSE, oma=c(0,0,8,0),
col=colors)
#legend("top",legend=levels(mtcars1[[7]],pch=1:3,col=colors,horiz=TRUE,bty="n",
#cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
require(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, legend=T, oma=c(0,0,8,0),
col=colors)
#legend("top",legend=levels(mtcars1[[7]],pch=1:3,col=colors,horiz=TRUE,bty="n",
#cex=1.5,xpd=TRUE)
require(MVN)
mvn(data =mtcars1[1:6] , univariateTest = "SW", desc = T)
by(mtcars1[,-7], mtcars1$cil, var)
require(biotools)
boxM(mtcars1[,-7], mtcars1$cil)
knitr::opts_chunk$set(echo = TRUE)
#preparamos los datos para su análisis, nos vamos a quedar con las variables numericas y como variable respuesta 'cilindors'
yvars<- cbind(mtcars$mpg, mtcars$disp, mtcars$hp, mtcars$drat,mtcars$wt, mtcars$qsec)
colnames(yvars) <-c("mpg","disp","hp","drat","wt","qsec")
#creo un conjunto solo con las variables a analizar, esto para facilitar análisis, graficas y validacion de supuestos posteriores. Convertimos a caracter la variable cilindros
mtcars1<-mtcars
cil<-as.character(mtcars$cyl)
amf <-factor(mtcars$am)
mtcars1$cyl <- NULL
mtcars1$vs <- NULL
mtcars1$gear <- NULL
mtcars1$carb <- NULL
mtcars1$am <- NULL
str(mtcars1)
mma<-manova(yvars ~ amf+cil, data=mtcars1)
mma
# mtcars$mpg, mtcars$cyl, mtcars$disp, mtcars$hp, mtcars$drat,mtcars$wt, mtcars$qsec, mtcars$gear, mtcars$vs)
modelo1<-aov(mtcars1$mpg ~ amf+cil )
summary(modelo1)
modelo2<-aov(mtcars1$disp ~ amf+cil )
summary(modelo2)
modelo3<-aov(mtcars1$hp ~ amf+cil )
summary(modelo3)
modelo4<-aov(mtcars1$drat ~ amf+cil )
summary(modelo4)
modelo5<-aov(mtcars1$wt ~ amf+cil )
summary(modelo5)
modelo6<-aov(mtcars1$qsec ~ amf+cil )
summary(modelo6)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
require(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, legend=T, oma=c(0,0,8,0),
col=colors)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
require(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]*[8]],
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
require(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]+[8]],
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
require(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]*[8]],
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
require(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7],[8]],
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
require(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]]),
plot(mtcars1)
require(MVN)
mvn(data =mtcars1[1:6] , univariateTest = "SW", desc = T)
by(mtcars1[,-7], amf+cil, var)
by(mtcars1[,-7], amf*cil, var)
knitr::opts_chunk$set(echo = TRUE,warning = FALSE, message = FALSE)
library(smacof)
library("smacof")
install.packages("gtools")
library("smacof")
cmdscale(eurodist2, k = 9, eig = TRUE, add = FALSE, x.ret = FALSE)$eig
eurodist2=as.dist(eurodist) #Lo ponemos en la clase dist.
eurodist2
knitr::opts_chunk$set(echo = TRUE,warning = FALSE, message = FALSE)
str(eurodist)
summary(eurodist)
eurodist2=as.dist(eurodist) #Lo ponemos en la clase dist.
eurodist2
library("smacof")
library("smacof")
cmdscale(eurodist2, k = 9, eig = TRUE, add = FALSE, x.ret = FALSE)$eig
resm.eurodist2 <- smacofSym(eurodist2)
#Hacemos MDS métrico.
resm.eurodist2 <- smacofSym(eurodist2,2,)
resm.eurodist2
summary(resm.eurodist2)
plot(resm.eurodist2, main="smacofSym(eurodist2,2)")
library("smacof")
cmdscale(eurodist2, k = 9, eig = TRUE, add = FALSE, x.ret = FALSE)$eig
#Hacemos MDS métrico.
resm.eurodist2 <- smacofSym(eurodist2,2,)
resm.eurodist2
summary(resm.eurodist2)
plot(resm.eurodist2, main="smacofSym(eurodist2,2)")
str(eurodist)
summary(eurodist)
eurodist2=as.dist(eurodist) #Lo ponemos en la clase dist.
eurodist2
library("smacof")
cmdscale(eurodist2, k = 19, eig = TRUE, add = FALSE, x.ret = FALSE)$eig
#Hacemos MDS métrico.
resm.eurodist2 <- smacofSym(eurodist2,2,)
resm.eurodist2
summary(resm.eurodist2)
plot(resm.eurodist2, main="smacofSym(eurodist2,2)")
library("smacof")
cmdscale(eurodist2, k = 20, eig = TRUE, add = FALSE, x.ret = FALSE)$eig
#Hacemos MDS métrico.
resm.eurodist2 <- smacofSym(eurodist2,2,)
resm.eurodist2
summary(resm.eurodist2)
plot(resm.eurodist2, main="smacofSym(eurodist2,2)")
tabla1<-read.csv("tabla1.csv",header = T)
View(tabla1)
tabla1.diss=sim2diss(tabla1,1)
resnm.tabla1=smacofSym(tabla1.diss,ndim=2,metric=FALSE)
tabla1.diss=sim2diss(tabla1,1)
resnm.tabla1=smacofSym(tabla1.diss,ndim=2,metric=F)
resnm.tabla1=smacofSym(tabla1.diss,ndim=2,type="Ordinal")
resnm.tabla1=smacofSym(tabla1.diss,ndim=2,type=c("Ordinal"))
resnm.tabla1=mds(tabla1.diss,ndim=2,type="Ordinal")
resnm.tabla1=mds(tabla1.diss, ndim=2, type = "ordinal")
resnm.tabla1=mds(tabla1, ndim=2, type = "ordinal")
resnm.tabla1
summary(resnm.tabla1)
plot(resnm.tabla1,main='smacofSym(tabla1.diss,ndim=2,metric=FALSE)')
install.packages("RandomFields")
install.packages("geoR")
install.packages("gstat")
setwd("C:\Users\franm\OneDrive\Documents\Personales\Javier\Academicos\UGR - Estadistica Aplicada\Materias\22-23\(48) TÉCNICAS ESTADÍSTICAS MULTIVARIANTES\Tema 7")
setwd("C:/Users/franm/OneDrive/Documents/Personales/Javier/Academicos/UGR - Estadistica Aplicada/Materias/22-23/(48) TÉCNICAS ESTADÍSTICAS MULTIVARIANTES/Tema 7")
install.packages("mass")
install.packages("MASS")
library("MASS")
knitr::opts_chunk$set(echo = TRUE)
library("MASS")
datos<-read.table("discriminante.txt", header=TRUE)
attach(datos)
datos
knitr::opts_chunk$set(echo = TRUE)
library("MASS")
datos<-read.table("discriminante.txt", header=TRUE)
attach(datos)
datos
discrimi<-lda(discriminante~X1+X2+X3+X4+X5+X6+X7+X8+X9+X10+X11+X12+X13,
prior=c(0.33,0.33,0.34), method="moment", tol=0.001)
discrimi$svd
discrimi<-lda(discriminante~X1+X2+X3+X4+X5+X6+X7+X8+X9+X10+X11+X12+X13,
prior=c(0.33,0.33,0.34), method="moment", tol=0.001)
discrimi
Datos2<-rbind(c(5.6, 4.2, 15.8, 1.7, 0.17, 1.6, 2.3, 6.0, 4.0, 5.27,0.14, 216.25, 26.66), c(5.45,3.09, 17.82, 1.56, 0.14, 1.62, 1.97,5.21, 2.68, 7.45, 0.15, 285.71, 23.42))
Datos21<-data.frame(Datos2)
discrimi2<-predict(discrimi,newdata=Datos21,prior=discrimi$prior,2)
discrimi2
table(predict(discrimi)$class, discriminante)
discriminante
plot(discrimi)
pairs(discrimi)
ldahist(discrimi, g, nbins = 25, h, x0 = - h/1000, breaks,xlim = range(breaks),
ymax = 0, width, type = c("histogram", "density", "both"),
sep = (type != "density"),col = 5,
xlab = deparse(substitute(data)), bty = "n", ...)
ldahist(discrimi, g, nbins = 25, h, x0 = - h/1000, breaks,xlim = range(breaks),
ymax = 0, width, type = c("histogram", "density", "both"),
sep = (type != "density"),col = 5,
xlab = deparse(substitute(data)), bty = "n")
ldahist(discrimi)
View(discrimi)
ldahist(discrimi,datos$discriminante)
ldahist(discrimi2[,2],datos$discriminante)
ldahist(discrimi2[,2],datos$discriminante)
ldahist(datos[,2],datos$discriminante)
ldahist(discrimi[,2],discrimi$discriminante)
ldahist(discrimi2[,2],discrimi2$discriminante)
ldahist(datos[,2],datos$discriminante)
ldahist(datos[,2],datos$discriminante)
ldahist(datos[,2],datos$discriminante)
ldahist(datos[,2],datos$discriminante)
datos<-read.table("discriminante2.txt", header=TRUE)
attach(datos)
datos
rm("Datos2")
rm("Datos21")
rm("discrimi")
rm("discrimi2")
discrimi<-lda(ansiedad~X1+X2+X3,prior=c(0.33,0.33,0.34), method="moment", tol=0.001)
discrimi
discrimi$svd
Datos2<-rbind(c(7.5, 9, 2))
Datos21<-data.frame(Datos2)
discrimi2<-predict(discrimi,newdata=Datos21,prior=discrimi$prior,2)
discrimi2
Datos2<-rbind(c(7.5, 9, 2))
Datos21<-data.frame(Datos2)
discrimi2<-predict(discrimi,newdata=Datos21,prior=discrimi$prior,1)
discrimi2
Datos2<-rbind(c(7.5, 9, 2))
Datos21<-data.frame(Datos2)
discrimi2<-predict(discrimi,newdata=Datos21,prior=discrimi$prior,2)
discrimi2
table(predict(discrimi)$class, discriminante)
table(predict(discrimi)$class, ansiedad)
ansiedad
table(predict(discrimi)$class, ansiedad)
#ansiedad
plot(discrimi)
pairs(discrimi)
ldahist(datos[,2],datos$ansiedad)
ldahist(datos[,2:3],datos$ansiedad)
ldahist(datos[,2],datos$ansiedad)
ldahist(datos[,3],datos$ansiedad)
knitr::opts_chunk$set(echo = TRUE)
library("MASS")
qqnorm(datos[datos$X1 == "A","ansiedad"], main = "A")
library(mvnormtest)
mshapiro.test(t(datos[,2:3]))
library(mvnormtest)
shapiro.test(t(datos[,2:3]))
homocedasticidad_tratamiento=bartlett.test(datos[,2:3])
print(homocedasticidad_tratamiento)
homocedasticidad_tratamiento=bartlett.test(list(datos$X1, datos$X2, datos$X3))
print(homocedasticidad_tratamiento)
qqnorm(datos[datos$X1 == "A","ansiedad"], main = "A")
qqnorm(datos[datos$X1 == "A"], main = "A")
qqnorm(datos[datos$X1], main = "A")
qqnorm(datos$X1)
qqline(datos$X1)
qqnorm(datos$X1)
qqline(datos$X1)
library(mvnormtest)
shapiro.test(t(datos[,2:3]))
par(mfrow = c(1,3))
qqnorm(datos$X1)
qqline(datos$X1)
qqnorm(datos$X2)
qqline(datos$X2)
qqnorm(datos$X3)
qqline(datos$X3)
par(mfrow = c(1,1))
library(mvnormtest)
shapiro.test(t(datos[,2:3]))
par(mfrow = c(3,1))
qqnorm(datos$X1)
qqline(datos$X1)
qqnorm(datos$X2)
qqline(datos$X2)
qqnorm(datos$X3)
qqline(datos$X3)
par(mfrow = c(1,1))
library(mvnormtest)
shapiro.test(t(datos[,2:3]))
par(mfrow = c(2,2))
qqnorm(datos$X1)
qqline(datos$X1)
qqnorm(datos$X2)
qqline(datos$X2)
qqnorm(datos$X3)
qqline(datos$X3)
par(mfrow = c(1,1))
library(mvnormtest)
shapiro.test(t(datos[,2:3]))
par(mfrow = c(1,3))
qqnorm(datos$X1)
qqline(datos$X1)
qqnorm(datos$X2)
qqline(datos$X2)
qqnorm(datos$X3)
qqline(datos$X3)
par(mfrow = c(1,1))
cor(list(datos$X1, datos$X2, datos$X3), use="complete")
cor(list(datos$X1, datos$X2, datos$X3), use="complete")
cor(c(datos$X1, datos$X2, datos$X3), use="complete")
cor(datos[c(X1,X2,X3)], use="complete")
cor(datos[c("X1","X2","X3")], use="complete")
knitr::opts_chunk$set(echo = TRUE)
library("MASS")
library(GGally)
library(corrplot)
cor(datos[c("X1","X2","X3")], use="complete")
ggpairs(datos[,2:3], lower = list(continuous = "smooth"),
diag = list(continuous = "barDiag"), axisLabels = "none")
corrplot(cor(datos),sig.level=0.05,typ="lower")
cor(datos[c("X1","X2","X3")], use="complete")
ggpairs(datos[,2:4], lower = list(continuous = "smooth"),
diag = list(continuous = "barDiag"), axisLabels = "none")
corrplot(cor(datos),sig.level=0.05,typ="lower")
library(mvnormtest)
shapiro.test(t(datos[,2:4]))
par(mfrow = c(1,3))
qqnorm(datos$X1)
qqline(datos$X1)
qqnorm(datos$X2)
qqline(datos$X2)
qqnorm(datos$X3)
qqline(datos$X3)
par(mfrow = c(1,1))
homocedasticidad_tratamiento=bartlett.test(list(datos$X1, datos$X2, datos$X3))
print(homocedasticidad_tratamiento)
cor(datos[c("X1","X2","X3")], use="complete")
ggpairs(datos[,2:4], lower = list(continuous = "smooth"),
diag = list(continuous = "barDiag"), axisLabels = "none")
corrplot(datos[,2:4],sig.level=0.05,typ="lower")
cor(datos[c("X1","X2","X3")], use="complete")
ggpairs(datos[,2:4], lower = list(continuous = "smooth"),
diag = list(continuous = "barDiag"), axisLabels = "none")
corrplot(datos[c("X1","X2","X3")],sig.level=0.05,typ="lower")
corrplot(cor(datos[c("X1","X2","X3")], use="complete"),sig.level=0.05,typ="lower")
cor(datos[c("X1","X2","X3")], use="complete")
ggpairs(datos[,2:4], lower = list(continuous = "smooth"),
diag = list(continuous = "barDiag"), axisLabels = "none")
corrplot(cor(datos[c("X1","X2","X3")], use="complete"),sig.level=0.05,typ="lower")
str(datos)
discrimi<-lda(ansiedad~X1+X2+X3,prior=c(0.33,0.33,0.34), method="moment", tol=0.001)
datos<-read.table("discriminante2.txt", header=TRUE)
attach(datos)
str(datos)
homocedasticidad_tratamiento=bartlett.test(list(datos$X1, datos$X2, datos$X3))
print(homocedasticidad_tratamiento)
cor(datos[c("X1","X2","X3")], use="complete")
ggpairs(datos[,2:4], lower = list(continuous = "smooth"),
diag = list(continuous = "barDiag"), axisLabels = "none")
corrplot(cor(datos[c("X1","X2","X3")], use="complete"),sig.level=0.05,typ="lower")
discrimi<-lda(ansiedad~X1+X2+X3,prior=c(0.33,0.33,0.34), method="moment", tol=0.001)
discrimi
discrimi$svd
Datos2<-rbind(c(7.5, 9, 2))
Datos21<-data.frame(Datos2)
discrimi2<-predict(discrimi,newdata=Datos21,prior=discrimi$prior,2)
discrimi2
table(predict(discrimi)$class, ansiedad)
#ansiedad
plot(discrimi)
pairs(discrimi)
ldahist(datos[,2],datos$ansiedad)
ldahist(datos[,3],datos$ansiedad)
ldahist(datos[,4],datos$ansiedad)
par(mfrow = c(1,3))
ldahist(datos[,2],datos$ansiedad)
ldahist(datos[,3],datos$ansiedad)
ldahist(datos[,4],datos$ansiedad)
par(mfrow = c(1,1))
par(mfrow = c(1,3))
ldahist(datos[,2],datos$ansiedad)
ldahist(datos[,3],datos$ansiedad)
ldahist(datos[,4],datos$ansiedad)
par(mfrow = c(1,1))
par(mfrow = c(3,1))
ldahist(datos[,2],datos$ansiedad)
ldahist(datos[,3],datos$ansiedad)
ldahist(datos[,4],datos$ansiedad)
par(mfrow = c(1,1))
ploti<-ldahist(datos[,2],datos$ansiedad)
ploti<-ldahist(datos[,3],datos$ansiedad)
ploti<-ldahist(datos[,4],datos$ansiedad)
par(mfrow = c(3,1))
ploti
par(mfrow = c(1,1))
ploti<-ldahist(datos[,2],datos$ansiedad)
ploti<-ldahist(datos[,3],datos$ansiedad)
ploti<-ldahist(datos[,4],datos$ansiedad)
par(mfrow = c(1,3))
ploti
par(mfrow = c(1,1))
ploti
install.packages("grDevices")
install.packages("grDevices")
#ploti1<-ldahist(datos[,2],datos$ansiedad)
#ploti2<-ldahist(datos[,3],datos$ansiedad)
#ploti3<-ldahist(datos[,4],datos$ansiedad)
ploti1<-recordPlot(ldahist(datos[,2],datos$ansiedad))
library(grDevices)
#ploti1<-ldahist(datos[,2],datos$ansiedad)
#ploti2<-ldahist(datos[,3],datos$ansiedad)
#ploti3<-ldahist(datos[,4],datos$ansiedad)
ploti1<-recordPlot(ldahist(datos[,2],datos$ansiedad))
#ploti1<-ldahist(datos[,2],datos$ansiedad)
#ploti2<-ldahist(datos[,3],datos$ansiedad)
#ploti3<-ldahist(datos[,4],datos$ansiedad)
recordPlot(ldahist(datos[,2],datos$ansiedad))
par(mfrow = c(1,3))
ldahist(datos[,2],datos$ansiedad)
ldahist(datos[,3],datos$ansiedad)
ldahist(datos[,4],datos$ansiedad)
par(mfrow = c(1,1))
par(mfrow = c(1,3))
ldahist(datos[,2:4],datos$ansiedad)
#ldahist(datos[,3],datos$ansiedad)
#ldahist(datos[,4],datos$ansiedad)
par(mfrow = c(1,1))
par(mfrow = c(1,3))
ldahist(datos[,2],datos$ansiedad)
ldahist(datos[,3],datos$ansiedad)
ldahist(datos[,4],datos$ansiedad)
par(mfrow = c(1,1))
par(mfrow = c(1,3))
#ldahist(datos[,2],datos$ansiedad)
#ldahist(datos[,3],datos$ansiedad)
#ldahist(datos[,4],datos$ansiedad)
ldahist(datos$X1,datos$ansiedad)
ldahist(datos$X2,datos$ansiedad)
ldahist(datos$X3,datos$ansiedad)
par(mfrow = c(1,1))
